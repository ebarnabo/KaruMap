{"ast":null,"code":"import { LMap, LTileLayer, LMarker, LPopup } from '@vue-leaflet/vue-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport Swal from 'sweetalert2/dist/sweetalert2';\nimport 'sweetalert2/dist/sweetalert2.css';\nimport L from 'leaflet';\nimport jardinBadge from '../assets/img/jardin-badge.png';\nimport monumentBadge from '../assets/img/monument-badge.png';\nimport { magicMouse } from 'magicmouse.js';\nconst hauteurIcone = 70;\nconst ratio = 170 / 261;\nconst largeurIcone = hauteurIcone * ratio;\nconst jardinIcon = L.icon({\n  iconUrl: require('../assets/img/jardin.png'),\n  iconSize: [largeurIcone, hauteurIcone]\n});\nconst monumentIcon = L.icon({\n  iconUrl: require('../assets/img/muse.png'),\n  iconSize: [largeurIcone, hauteurIcone]\n});\nexport default {\n  name: 'KaruData',\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LPopup\n  },\n  mounted() {\n    setTimeout(() => {\n      this.showSplash = false;\n    }, 650); // Temps reload \n    // Charge les données de l'API et de la BD au lancement de l'appli\n    this.Import_data();\n    console.log(this.marqueurs);\n    this.fetchMarqueurs();\n    //this.Import_donnes();\n    this.applySystemTheme();\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => this.applySystemTheme());\n    document.addEventListener('click', this.handleOutsideClick);\n    document.addEventListener('click', this.gererClicDocument);\n    this.initMagicMouse();\n  },\n  data() {\n    return {\n      center: [16.265, -61.550],\n      // Coordonnées de la Guadeloupe\n      zoom: 10.4,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      isMenuOpen: false,\n      isCursorHidden: true,\n      showSplash: true,\n      // Afficher l'écran de splash\n      Marqueurs: [],\n      nombreJardins: 0,\n      nombreMonuments: 0,\n      suggestions: [],\n      ouvertSuggestions: false,\n      searchTerm: '',\n      Marqueur_Select: null,\n      Marqueur_Nom: '',\n      AjoutMarquer: false,\n      selectedMarkerIndex: null,\n      dernierMarqueur: null,\n      isDarkMode: window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,\n      filters: {\n        jardins: true,\n        sitesEtMonuments: true\n      },\n      currentStyle: 'jawg-streets',\n      // Carte active\n      styles: [{\n        name: 'Streets',\n        value: 'jawg-streets'\n      }, {\n        name: 'Terrain',\n        value: 'jawg-terrain'\n      }, {\n        name: 'Light',\n        value: 'jawg-light'\n      }, {\n        name: 'Dark',\n        value: 'jawg-dark'\n      }, {\n        name: 'Matrix',\n        value: 'jawg-matrix'\n      }, {\n        name: 'Sunny',\n        value: 'jawg-sunny'\n      }],\n      showSearch: false\n    };\n  },\n  computed: {\n    tileLayerUrl() {\n      return `https://{s}.tile.jawg.io/${this.currentStyle}/{z}/{x}/{y}{r}.png?access-token=si8sl9pjFXL4H8PHv5ZjtXebofnvIybSsVqk3WxdmC8dyCI3UXZOe9hQQ8kbWKGE`;\n    },\n    filteredMarqueurs() {\n      return this.Marqueurs.filter(marqueur => {\n        if (this.filters.jardins && marqueur.type === 'jardins') return true;\n        if (this.filters.sitesEtMonuments && marqueur.type === 'SitesEtMonuments') return true;\n        return false;\n      });\n    }\n  },\n  beforeUnmount() {\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.applySystemTheme);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.removeEventListener('click', this.gererClicDocument);\n  },\n  methods: {\n    toggleMenu() {\n      this.isMenuOpen = !this.isMenuOpen;\n      console.log(`Menu basculé : ${this.isMenuOpen ? 'Ouvert' : 'Fermé'}`);\n    },\n    handleOutsideClick(e) {\n      if (this.$refs.menu && !this.$refs.menu.contains(e.target) && !this.$refs.menuButton.contains(e.target)) {\n        console.log(\"Click dehors, fermeture menu.\");\n        this.isMenuOpen = false;\n      }\n    },\n    toggleSearch() {\n      this.showSearch = !this.showSearch;\n    },\n    // Ouvrir les positions dans une appli gps\n    ouvrirApplicationGPS(marqueur) {\n      Swal.fire({\n        title: 'Ouvrir avec',\n        html: `\n        <div style=\"text-align: center;\">\n          <p>Choisissez votre application pour aller à la position :</p>\n          <button id=\"openGoogleMaps\" class=\"swal2-confirm swal2-styled btn\" style=\"display: inline-block; margin: 0.5em;\">\n          </button>\n          <button id=\"openWaze\" class=\"swal2-confirm swal2-styled btn\" style=\"display: inline-block; margin: 0.5em;\">\n          </button>\n        </div>\n      `,\n        showCancelButton: true,\n        cancelButtonText: 'Annuler',\n        cancelButtonColor: '#cc1c35',\n        showConfirmButton: false,\n        preConfirm: () => {},\n        didOpen: () => {\n          // ouvrir Google Maps\n          document.getElementById('openGoogleMaps').addEventListener('click', () => {\n            const googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${marqueur.coordinates[0]},${marqueur.coordinates[1]}`;\n            window.open(googleMapsUrl, '_blank');\n            Swal.close();\n          });\n          // ouvrir Waze\n          document.getElementById('openWaze').addEventListener('click', () => {\n            const wazeUrl = `https://waze.com/ul?ll=${marqueur.coordinates[0]}%2C${marqueur.coordinates[1]}&navigate=yes`;\n            window.open(wazeUrl, '_blank');\n            Swal.close();\n          });\n        }\n      });\n    },\n    toggleTheme() {\n      this.isDarkMode = !this.isDarkMode; // Bascule sur le thème sombre\n      document.body.classList.toggle('dark-mode');\n      this.currentStyle = this.isDarkMode ? 'jawg-streets' : 'jawg-dark';\n    },\n    applySystemTheme() {\n      const isSystemDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.isDarkMode = isSystemDark;\n      this.toggleTheme(); // Appliquer le thème\n    },\n    initMagicMouse() {\n      const options = {\n        \"outerStyle\": \"circle\",\n        \"hoverEffect\": \"circle-move\",\n        \"hoverItemMove\": false,\n        \"defaultCursor\": false,\n        \"outerWidth\": 30,\n        \"outerHeight\": 30\n      };\n      magicMouse(options);\n    },\n    rechercherMarqueur() {\n      const searchTerm = document.getElementById('search-box').value.toLowerCase();\n      const foundMarker = this.Marqueurs.find(marker => marker.name.toLowerCase().includes(searchTerm));\n      if (foundMarker) {\n        this.centerOnMarker(foundMarker.coordinates[0], foundMarker.coordinates[1]);\n      } else {\n        alert('Marqueur non trouvé.');\n      }\n    },\n    mettreAJourSuggestions() {\n      const searchTerm = this.searchTerm.toLowerCase();\n      this.suggestions = this.Marqueurs.filter(marker => marker.name.toLowerCase().includes(searchTerm)).map(marker => marker.name).slice(0, 3); // Limite à 3 suggestions\n\n      this.ouvertSuggestions = this.suggestions.length > 0;\n    },\n    selectionnerSuggestion(suggestion) {\n      this.searchTerm = suggestion; // Maj du champ de recherche avec la suggestion sélectionnée\n      this.suggestions = [];\n      this.ouvertSuggestions = false;\n      const foundMarker = this.Marqueurs.find(marker => marker.name === suggestion);\n      if (foundMarker) {\n        this.centerOnMarker(foundMarker.coordinates[0], foundMarker.coordinates[1]);\n      }\n    },\n    gererClicDocument(e) {\n      if (this.ouvertSuggestions && !this.$refs.searchBox.contains(e.target) && !this.$refs.suggestionsContainer.contains(e.target)) {\n        this.suggestions = [];\n        this.ouvertSuggestions = false;\n      }\n    },\n    addSpin(event) {\n      if (event.target.classList.contains('btn')) {\n        event.target.querySelectorAll('i').forEach(icon => {\n          icon.classList.add('fa-spin');\n        });\n      }\n    },\n    removeSpin(event) {\n      if (event.target.classList.contains('btn')) {\n        event.target.querySelectorAll('i').forEach(icon => {\n          icon.classList.remove('fa-spin');\n        });\n      }\n    },\n    async Import_donnes() {\n      try {\n        console.log('Début de l\\'importation des données...');\n        await Promise.all([axios.get('http://localhost:3000/jardins'), axios.get('http://localhost:3000/monuments')]);\n        console.log('Import des données OK');\n        const marqueurs_données = await axios.get('http://localhost:3000/marqueurs');\n        console.log('Récupération des données des marqueurs OK', marqueurs_données.data);\n        this.Marqueurs = marqueurs_données.data.map(marqueur => {\n          let type = marqueur.type;\n          return {\n            coordinates: [marqueur.latitude, marqueur.longitude],\n            name: marqueur.nom,\n            type: type,\n            code_postal: marqueur.code_postal || marqueur.cp,\n            commune: marqueur.commune,\n            adresse_complete: marqueur.adresse_complete\n          };\n        });\n        this.reloadWithSplash();\n        console.log('Transformation des données des marqueurs OK', this.Marqueurs);\n      } catch (error) {\n        console.error(\"Erreur lors de l'importation des données:\", error);\n      }\n    },\n    async Import_data() {\n      try {\n        console.log('Début de l\\'importation des données des marqueurs...');\n        const marqueurs_données = await axios.get('http://localhost:3000/marqueurs');\n        console.log('Récupération des données des marqueurs OK', marqueurs_données.data);\n        this.Marqueurs = marqueurs_données.data.map(marqueur => {\n          return {\n            coordinates: [marqueur.latitude, marqueur.longitude],\n            name: marqueur.nom,\n            type: marqueur.type,\n            code_postal: marqueur.code_postal || marqueur.cp,\n            // Utilisez 'marqueur.cp' si 'marqueur.code_postal' n'est pas disponible\n            commune: marqueur.commune,\n            adresse_complete: marqueur.adresse_complete\n          };\n        });\n        console.log('Transformation et importation des données des marqueurs OK');\n      } catch (error) {\n        console.error(\"Erreur lors de l'importation des données des marqueurs:\", error);\n      }\n    },\n    Modif_Marqueur(index) {\n      const currentMarker = this.Marqueurs[index];\n      const originalName = currentMarker.name;\n      Swal.fire({\n        html: `\n        <h2 class=\"txt-primary\">Modifier un marqueur</h2>\n        <input id=\"nom\" class=\"swal2-input\" value=\"${currentMarker.name}\" placeholder=\"Nom\">\n        <input id=\"code_postal\" class=\"swal2-input\" value=\"${currentMarker.code_postal}\" placeholder=\"Code Postal\">\n        <input id=\"commune\" class=\"swal2-input\" value=\"${currentMarker.commune}\" placeholder=\"Commune\">\n      <div class=\"mt-3\">\n            <h5 class=\"txt-primary\">Choix du type</h5>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"jardins\" ${currentMarker.type === 'jardins' ? 'checked' : ''}>\n              <img src=\"${jardinBadge}\" alt=\"Jardin\" style=\"width: 50px;\">\n            </label>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"SitesEtMonuments\" ${currentMarker.type === 'SitesEtMonuments' ? 'checked' : ''}>\n              <img src=\"${monumentBadge}\" alt=\"Monument\" style=\"width: 50px;\">\n            </label>\n      </div>\n      `,\n        preConfirm: () => {\n          return {\n            name: document.getElementById('nom').value,\n            code_postal: document.getElementById('code_postal').value,\n            commune: document.getElementById('commune').value,\n            type: document.querySelector('input[name=\"type\"]:checked').value\n          };\n        },\n        confirmButtonText: 'Valider les modifications',\n        focusConfirm: false\n      }).then(result => {\n        // Après avoir cliquer sur le bouton de modal\n        if (result.isConfirmed) {\n          // Mise à jour du marqueur dans l'interface utilisateur\n          const updatedMarker = {\n            ...currentMarker,\n            name: result.value.name,\n            code_postal: result.value.code_postal,\n            commune: result.value.commune,\n            type: result.value.type\n          };\n          this.Marqueurs[index] = updatedMarker;\n          this.Marqueur_Select = updatedMarker;\n          this.Marqueur_Update(originalName);\n        }\n      });\n    },\n    Marqueur_Update(originalName) {\n      const {\n        name,\n        code_postal,\n        commune,\n        type\n      } = this.Marqueur_Select;\n      axios.put(`http://localhost:3000/marqueurs/${originalName}`, {\n        new_nom: name,\n        new_code_postal: code_postal,\n        new_commune: commune,\n        type: type\n      }).then(() => {\n        console.log('Mise à jour Marqueur OK');\n        this.Marqueur_Select = null; // Réinitialiser après la mise à jour\n      }).catch(error => {\n        console.error('Mise à jour Marqueur KO :', error);\n      });\n    },\n    Annuler() {\n      if (this.AjoutMarquer && this.dernierMarqueur !== null) {\n        this.Marqueurs.splice(this.dernierMarqueur, 1);\n        this.dernierMarqueur = null;\n      }\n      this.Marqueur_Select = null;\n      this.AjoutMarquer = false;\n    },\n    Supprimer_Marqueur(index) {\n      const currentMarker = this.Marqueurs[index];\n      Swal.fire({\n        title: 'Êtes-vous sûr de vouloir supprimer ce marqueur ?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#5457f6',\n        cancelButtonColor: '#cc1c35',\n        confirmButtonText: 'Oui, supprimer !'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.Marqueurs.splice(index, 1);\n          axios.delete(`http://localhost:3000/marqueurs/${currentMarker.name}`).then(() => {\n            console.log('Suppression Marqueur OK');\n            this.calculateStats();\n            //this.resetMap();\n            location.reload();\n          }).catch(error => {\n            console.error('Suppression Marqueur KO :', error);\n          });\n        }\n      });\n    },\n    Ajouter_Marqueur(event) {\n      console.log(\"Début de la fonction Ajouter_Marqueur\");\n      const latitude = event.latlng.lat;\n      const longitude = event.latlng.lng;\n      console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);\n\n      // Appel de l'API pour obtenir la liste des communes \n      axios.get('https://geo.api.gouv.fr/communes').then(response => {\n        const communes = response.data.map(commune => ({\n          nom: commune.nom,\n          code_postal: commune.codesPostaux[0]\n        }));\n        console.log(`Nombre de communes récupérées : ${communes.length}`);\n\n        // La liste des options pour l'autocomplétion\n        const options = communes.map(commune => `${commune.nom} (${commune.code_postal})`);\n        console.log(`Options pour l'autocomplétion construites : ${options.length} options`);\n\n        // Affichage du formulaire Swal\n        Swal.fire({\n          html: `\n          <h1 class=\"txt-primary\">Ajouter un centre d'intérêt <i class=\"fa-solid txt-dark fa-map-pin txt-danger\"></i></h1>\n          <input id=\"nom\" class=\"swal2-input\" placeholder=\"Nom\">\n          <input id=\"commune\" class=\"swal2-input\" placeholder=\"Commune\" list=\"communes\">\n          <div class=\"mt-3\">\n            <h5 class=\"txt-primary\">Choix du type</h5>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"jardins\" checked required>\n              <img src=\"${jardinBadge}\" alt=\"Jardin\" style=\"width: 50px;\">\n            </label>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"SitesEtMonuments\">\n              <img src=\"${monumentBadge}\" alt=\"Monument\" style=\"width: 50px;\">\n            </label>\n          </div>\n        `,\n          focusConfirm: false,\n          preConfirm: () => {\n            console.log(\"Validation du formulaire Swal\");\n            const nom = document.getElementById('nom').value;\n            const commune_input = document.getElementById('commune').value;\n            const type = document.querySelector('input[name=\"type\"]:checked').value;\n            if (!nom || !commune_input) {\n              console.log(\"Échec de la validation : champs manquants\");\n              Swal.showValidationMessage(\"Veuillez remplir tous les champs.\");\n              return false;\n            }\n            console.log(`Formulaire validé avec : nom=${nom}, commune=${commune_input}, type=${type}`);\n            const match = commune_input.match(/(.*) \\((\\d+)\\)/);\n            const commune = match ? match[1] : commune_input;\n            const code_postal_autocomplete = match ? match[2] : '';\n            return {\n              nom,\n              type,\n              code_postal: code_postal_autocomplete,\n              commune\n            };\n          },\n          didOpen: () => {\n            console.log(\"Ouverture du Swal pour ajout de marqueur\");\n            const datalist = document.createElement('datalist');\n            datalist.id = 'communes';\n            options.forEach(option => {\n              const optionElement = document.createElement('option');\n              optionElement.value = option;\n              datalist.appendChild(optionElement);\n            });\n            document.getElementById('commune').appendChild(datalist);\n          }\n        }).then(result => {\n          if (result.isConfirmed) {\n            console.log(\"Marqueur confirmé pour ajout\");\n            const Nouveau_Marqueur = {\n              coordinates: [latitude, longitude],\n              name: result.value.nom,\n              type: result.value.type,\n              code_postal: result.value.code_postal || '',\n              commune: result.value.commune || '',\n              adresse_complete: ''\n            };\n            console.log(`Nouveau marqueur : ${JSON.stringify(Nouveau_Marqueur)}`);\n            this.Marqueur_Select = Nouveau_Marqueur;\n            this.Enregistrer_Marqueur();\n            this.Import_donnes();\n            location.reload();\n          } else {\n            console.log(\"Ajout de marqueur annulé ou non confirmé\");\n          }\n        });\n      }).catch(error => {\n        console.error('Erreur lors de la récupération des communes:', error);\n      });\n      console.log(\"Fin de la fonction Ajouter_Marqueur\");\n    },\n    Enregistrer_Marqueur() {\n      if (!this.Marqueur_Select.type) {\n        console.error(\"Le type de marqueur est indéfini\");\n        return;\n      }\n      console.log(\"Type de marqueur :\", this.Marqueur_Select.type);\n      axios.post(`http://localhost:3000/marqueurs`, {\n        type: this.Marqueur_Select.type,\n        nom: this.Marqueur_Select.name,\n        latitude: this.Marqueur_Select.coordinates[0],\n        longitude: this.Marqueur_Select.coordinates[1],\n        code_postal: this.Marqueur_Select.code_postal,\n        commune: this.Marqueur_Select.commune,\n        adresse_complete: this.Marqueur_Select.adresse_complete\n      }).then(() => {\n        console.log('Ajout Marqueur OK');\n      }).catch(error => {\n        console.error(\"Ajout Marqueur KO:\", error);\n      });\n    },\n    centerOnMarker(lat, lng, index) {\n      this.center = [lat, lng];\n      this.zoom = 20;\n      this.selectedMarkerIndex = index; // Mise à jour de l'index du marqueur sélectionné\n      if (this.$refs.map && this.$refs.map.mapObject) {\n        const map = this.$refs.map.mapObject;\n        map.eachLayer(layer => {\n          if (layer instanceof L.Marker && layer.options.index === index) {\n            map.setView([lat, lng], this.zoom);\n            layer.openPopup();\n          }\n        });\n      }\n    },\n    reloadWithSplash() {\n      this.showSplash = true;\n      setTimeout(() => {\n        window.location.reload();\n      }, 100);\n    },\n    // Fonction pour revenir au Zoom de base\n    resetMap() {\n      this.zoom = 10.4;\n      this.center = [16.265, -61.550];\n    },\n    getIcon(type) {\n      console.log(`Recherche de l'icône pour le type: ${type}`);\n      if (type === 'jardins') {\n        console.log('Retour de l\\'icône pour les jardins');\n        return jardinIcon;\n      } else if (type === 'SitesEtMonuments') {\n        console.log('Retour de l\\'icône pour les Sites et Monuments');\n        return monumentIcon;\n      } else {\n        console.log('Type non reconnu, retour d\\'une icône par défaut');\n        return L.icon({\n          iconUrl: '../assets/img/default.png',\n          iconSize: [largeurIcone, hauteurIcone]\n        });\n      }\n    },\n    getBadgeUrl(type) {\n      if (type === 'jardins') {\n        return require('../assets/img/jardin-badge.png');\n      } else if (type === 'SitesEtMonuments') {\n        return require('../assets/img/monument-badge.png');\n      } else {\n        return require('../assets/img/default-badge.png');\n      }\n    },\n    async fetchMarqueurs() {\n      try {\n        const response = await axios.get('http://localhost:3000/marqueurs');\n        this.marqueurs = response.data;\n        this.calculateStats();\n      } catch (error) {\n        console.error('Erreur lors de la récupération des marqueurs:', error);\n      }\n    },\n    //functions de calcul des stats de la base\n    calculateStats() {\n      this.nombreJardins = this.marqueurs.filter(m => m.type === 'jardins').length;\n      this.nombreMonuments = this.marqueurs.filter(m => m.type === 'SitesEtMonuments').length;\n    }\n  }\n};","map":{"version":3,"names":["LMap","LTileLayer","LMarker","LPopup","axios","Swal","L","jardinBadge","monumentBadge","magicMouse","hauteurIcone","ratio","largeurIcone","jardinIcon","icon","iconUrl","require","iconSize","monumentIcon","name","components","mounted","setTimeout","showSplash","Import_data","console","log","marqueurs","fetchMarqueurs","applySystemTheme","window","matchMedia","addEventListener","document","handleOutsideClick","gererClicDocument","initMagicMouse","data","center","zoom","url","isMenuOpen","isCursorHidden","Marqueurs","nombreJardins","nombreMonuments","suggestions","ouvertSuggestions","searchTerm","Marqueur_Select","Marqueur_Nom","AjoutMarquer","selectedMarkerIndex","dernierMarqueur","isDarkMode","matches","filters","jardins","sitesEtMonuments","currentStyle","styles","value","showSearch","computed","tileLayerUrl","filteredMarqueurs","filter","marqueur","type","beforeUnmount","removeEventListener","methods","toggleMenu","e","$refs","menu","contains","target","menuButton","toggleSearch","ouvrirApplicationGPS","fire","title","html","showCancelButton","cancelButtonText","cancelButtonColor","showConfirmButton","preConfirm","didOpen","getElementById","googleMapsUrl","coordinates","open","close","wazeUrl","toggleTheme","body","classList","toggle","isSystemDark","options","rechercherMarqueur","toLowerCase","foundMarker","find","marker","includes","centerOnMarker","alert","mettreAJourSuggestions","map","slice","length","selectionnerSuggestion","suggestion","searchBox","suggestionsContainer","addSpin","event","querySelectorAll","forEach","add","removeSpin","remove","Import_donnes","Promise","all","get","marqueurs_données","latitude","longitude","nom","code_postal","cp","commune","adresse_complete","reloadWithSplash","error","Modif_Marqueur","index","currentMarker","originalName","querySelector","confirmButtonText","focusConfirm","then","result","isConfirmed","updatedMarker","Marqueur_Update","put","new_nom","new_code_postal","new_commune","catch","Annuler","splice","Supprimer_Marqueur","confirmButtonColor","delete","calculateStats","location","reload","Ajouter_Marqueur","latlng","lat","lng","response","communes","codesPostaux","commune_input","showValidationMessage","match","code_postal_autocomplete","datalist","createElement","id","option","optionElement","appendChild","Nouveau_Marqueur","JSON","stringify","Enregistrer_Marqueur","post","mapObject","eachLayer","layer","Marker","setView","openPopup","resetMap","getIcon","getBadgeUrl","m"],"sources":["/Users/edwinbarnabot/Downloads/KaruMap/map/src/components/ContentMap.vue"],"sourcesContent":["<template>\n  \n  <div id=\"app\">\n    <div v-if=\"showSplash\" id=\"splashScreen\"><i class=\"fa-solid fa-hourglass-start fa-spin m-5 txt-primary\"></i> Chargement... <i class=\"fa-solid fa-hourglass-start fa-spin m-5 txt-primary\"></i></div>\n\n    <!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg mb-5 mt-4\">\n      <div class=\"container-fluid\">\n        <!-- Logo -->\n        <a class=\"navbar-brand\" href=\"#\">\n          <img src=\"../assets/logo.png\" height=\"120\" alt=\"Vue logo\" id=\"logo\" class=\"d-inline-block align-top magic-hover magic-hover__square\">\n        </a>\n        \n        <!-- Zone de recherche -->\n        <div class=\"search ml-auto nav-btn\" id=\"sr-zone\" >\n          <form class=\"search-container\" autocomplete=\"off\" @submit.prevent=\"rechercherMarqueur\">\n            <input id=\"search-box\" type=\"text\" class=\"search-box magic-hover magic-hover__square\" name=\"q\" v-model=\"searchTerm\" @input=\"mettreAJourSuggestions\" @blur=\"fermerSuggestions\" ref=\"searchBox\" />\n            <label for=\"search-box\"><span class=\"fa-search fa-solid search-icon\"></span></label>\n            <div class=\"suggestions-container\" ref=\"suggestionsContainer\">\n              <ul v-if=\"suggestions.length\">\n                <li v-for=\"suggestion in suggestions\" :key=\"suggestion\" @click=\"selectionnerSuggestion(suggestion)\">\n                  {{ suggestion }}\n                </li>\n              </ul>\n            </div>\n\n            <input type=\"submit\" id=\"search-submit\" class=\"magic-hover magic-hover__square\"/>\n          </form>\n        </div>\n        <button class=\"btn nav-btn magic-hover cursorOuter\" @click=\"toggleMenu\" ref=\"menuButton\" id=\"btn_list\"><i class=\"fa-solid fa-caret-left\"></i></button>\n      </div>\n    </nav>\n\n    <!-- Contenu de l'application -->\n    <div class=\"container\">\n      <div id=\"appli\" class=\"\">\n      <div  class=\"container-fluid \">\n        <div class=\"l-map-container width-transition\" :class=\"{\n            'col-xxl-11-animated': isMenuOpen, \n            'col-xxl-12-animated': !isMenuOpen,\n            'col-lg-10-animated': isMenuOpen, \n            'col-lg-12-animated': !isMenuOpen,\n          }\">          \n          <!-- Taille de la carte -->\n          <l-map :zoom=\"zoom\" :center=\"center\" @click=\"Ajouter_Marqueur\" class=\"l-map no-cursor\" zoomControl=\"true\">\n            <select v-model=\"currentStyle\"  id=\"mapselector\" @click.stop>\n              <option v-for=\"style in styles\" :value=\"style.value\" :key=\"style.value\">\n                {{ style.name }}\n              </option>\n            </select>\n            <div class=\"filters\" @click.stop>\n              <h1>Filtres</h1>\n              <div class=\"filter-option\">\n                <div  class=\"filter-text\">Jardins</div>\n                <label class=\"toggle-switch\">\n                  <input id=\"jardin\" type=\"checkbox\" v-model=\"filters.jardins\">\n                  <span class=\"slider round\"></span>\n                </label>\n              </div>\n              <div class=\"filter-option\">\n                <div class=\"filter-text\">Sites et Monuments</div>\n                <label class=\"toggle-switch\">\n                  <input id=\"monument\" type=\"checkbox\" v-model=\"filters.sitesEtMonuments\">\n                  <span class=\"slider round\"></span>\n                </label>\n              </div>\n            </div>\n        <!-- Boutton de reset -->\n        <button class=\"magic-hover magic-hover__square btn btn-reset\" @click=\"resetMap\" @click.stop>\n          <i class=\"fas fa-undo\"></i>\n        </button>\n            <l-tile-layer :url=\"tileLayerUrl\"></l-tile-layer>\n            <l-marker  v-for=\"(marker, index) in filteredMarqueurs\" :key=\"index\" :lat-lng=\"marker.coordinates\" :icon=\"getIcon(marker.type)\" @click=\"centerOnMarker(marker.coordinates[0], marker.coordinates[1], index)\">          \n              <l-popup>\n                <h1 class=\"popup_titre\">{{ marker.name }}</h1>\n                <div><p class=\"popup-txt\"><b>Code postal : </b> {{ marker.code_postal }}</p></div>\n                <div class=\"mb-3\"> <p class=\"popup-txt\"><b>Commune : </b>{{ marker.commune }}</p></div>\n                <button class=\"btn-primary btn mx-2 mt-2 \" @click=\"Modif_Marqueur(index)\">Modifier <i class=\"fa-solid fa-pen-to-square\"></i></button>\n                <button class=\"btn-danger btn mx-2 mt-2\" @click=\"Supprimer_Marqueur(index)\">Supprimer <i class=\"fa-solid fa-delete-left\"></i></button>\n                <!-- BOUTON ouvris le gps -->\n              </l-popup>\n            </l-marker>\n          </l-map>\n        </div>\n        \n          <!-- Menu caché -->\n          <transition name=\"menu\">\n            <div class=\"menu col-lg-2 col-xl-2 col-xxl-1\" v-show=\"isMenuOpen\" ref=\"menu\">\n              <div v-if=\"Marqueurs.length > 0\">\n                <div v-for=\"(marqueur, index) in Marqueurs\" :key=\"index\" class=\"card\" @click=\"centerOnMarker(marqueur.coordinates[0], marqueur.coordinates[1])\">\n                  <div class=\"card-body\">\n                    <img :src=\"getBadgeUrl(marqueur.type)\" class=\"badge-icon\" alt=\"Type\">\n                    <h5 class=\"card-title\">{{ marqueur.name }}</h5>\n                    <p class=\"card-text\">Code postal: {{ marqueur.code_postal }}</p>\n                    <p class=\"card-text\">Commune: {{ marqueur.commune }}</p>\n                    <button class=\"btn btn-primary magic-hover\" @click.stop.prevent=\"ouvrirApplicationGPS(marqueur)\">Itinéraires <i class=\"fa-solid fa-turn-up\"></i></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </transition>\n      </div>\n      <div class=\"container-fluid text-center\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-3 \">\n            <button class=\"btn btn-primary mt-3 mb-2 magic-hover magic-hover__square\" @click=\"Import_donnes\" @mouseover=\"addSpin\" @mouseleave=\"removeSpin\">Maj des données depuis l'API <i class=\"fas fa-arrows-spin\"></i> </button>\n          </div>\n        </div>\n\n      <div class=\"row justify-content-center\">\n        <div class=\"col\">\n          <button id=\"theme-toggle\" class=\"theme-toggle-button  magic-hover magic-hover__square\" @click=\"toggleTheme\">\n            <i v-if=\"isDarkMode\" class=\"fas fa-moon\" id=\"theme-icon\"></i>\n            <i v-else class=\"fas fa-sun\" id=\"theme-icon\"></i> \n          </button>\n        </div>\n\n      </div>  \n      </div>\n      <div class=\"stats\" v-if=\"marqueurs && marqueurs.length > 0\">\n      <div class=\"stat-item  magic-hover magic-hover__square\">\n        <h5 class=\"txt-secondary\">{{ nombreJardins }}</h5>\n        <p>Jardins</p>\n      </div>\n      <div class=\"stat-item\">\n        <h5 class=\"txt-primary\">{{ nombreMonuments }}</h5>\n        <p>Monuments</p>\n      </div>\n      <div class=\"additional-text\">\n        <p>Données statistiques</p>\n      </div>\n    </div>\n\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker, LPopup } from '@vue-leaflet/vue-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport Swal from 'sweetalert2/dist/sweetalert2';\nimport 'sweetalert2/dist/sweetalert2.css';\nimport L from 'leaflet';\n\nimport jardinBadge from '../assets/img/jardin-badge.png';\nimport monumentBadge from '../assets/img/monument-badge.png';\nimport { magicMouse } from 'magicmouse.js'\n\nconst hauteurIcone = 70;\nconst ratio = 170 / 261;\nconst largeurIcone = hauteurIcone * ratio;\n\nconst jardinIcon = L.icon({\n  iconUrl: require('../assets/img/jardin.png'), \n  iconSize: [largeurIcone, hauteurIcone], \n});\n\nconst monumentIcon = L.icon({\n  iconUrl: require('../assets/img/muse.png'), \n  iconSize: [largeurIcone, hauteurIcone],\n});\n\nexport default {\n  name: 'KaruData',\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LPopup\n  },\n  mounted() {\n    setTimeout(() => {\n      this.showSplash = false; \n    }, 650); // Temps reload \n    // Charge les données de l'API et de la BD au lancement de l'appli\n    this.Import_data();\n    console.log(this.marqueurs); \n    this.fetchMarqueurs();\n    //this.Import_donnes();\n    this.applySystemTheme();\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => this.applySystemTheme());\n    document.addEventListener('click', this.handleOutsideClick);\n    document.addEventListener('click', this.gererClicDocument);\n    this.initMagicMouse();\n},\n  data() {\n    return {\n      center: [16.265, -61.550], // Coordonnées de la Guadeloupe\n      zoom: 10.4,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      isMenuOpen: false, \n      isCursorHidden: true,\n      showSplash: true, // Afficher l'écran de splash\n      Marqueurs: [],\n      nombreJardins: 0,\n      nombreMonuments: 0,\n      suggestions: [],\n      ouvertSuggestions: false,\n      searchTerm: '',\n      Marqueur_Select: null,\n      Marqueur_Nom: '',\n      AjoutMarquer: false,\n      selectedMarkerIndex: null, \n      dernierMarqueur: null,\n      isDarkMode: window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,\n      filters: {\n      jardins: true,\n      sitesEtMonuments: true,\n      },\n      currentStyle: 'jawg-streets', // Carte active\n      styles: [\n        { name: 'Streets', value: 'jawg-streets' },\n        { name: 'Terrain', value: 'jawg-terrain' },\n        { name: 'Light', value: 'jawg-light' },\n        { name: 'Dark', value: 'jawg-dark' },\n        { name: 'Matrix', value: 'jawg-matrix' },\n        { name: 'Sunny', value: 'jawg-sunny' }\n      ],\n      showSearch: false,\n    };\n  },\n  computed: {\n    tileLayerUrl() {\n      return `https://{s}.tile.jawg.io/${this.currentStyle}/{z}/{x}/{y}{r}.png?access-token=si8sl9pjFXL4H8PHv5ZjtXebofnvIybSsVqk3WxdmC8dyCI3UXZOe9hQQ8kbWKGE`;\n    },\n    filteredMarqueurs() {\n    return this.Marqueurs.filter(marqueur => {\n      if (this.filters.jardins && marqueur.type === 'jardins') return true;\n      if (this.filters.sitesEtMonuments && marqueur.type === 'SitesEtMonuments') return true;\n      return false;\n    });\n  },\n  },\n  beforeUnmount() {\n  window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.applySystemTheme);\n  document.removeEventListener('click', this.handleOutsideClick);\n  document.removeEventListener('click', this.gererClicDocument);\n},\n\n  methods: {\n    toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n    console.log(`Menu basculé : ${this.isMenuOpen ? 'Ouvert' : 'Fermé'}`);\n  },\n    handleOutsideClick(e) {\n      if (this.$refs.menu && !this.$refs.menu.contains(e.target) && !this.$refs.menuButton.contains(e.target)) {\n      console.log(\"Click dehors, fermeture menu.\");\n      this.isMenuOpen = false;\n    }\n    },\n    toggleSearch() {\n      this.showSearch = !this.showSearch;\n    },\n  // Ouvrir les positions dans une appli gps\n    ouvrirApplicationGPS(marqueur) {\n    Swal.fire({\n      title: 'Ouvrir avec',\n      html: `\n        <div style=\"text-align: center;\">\n          <p>Choisissez votre application pour aller à la position :</p>\n          <button id=\"openGoogleMaps\" class=\"swal2-confirm swal2-styled btn\" style=\"display: inline-block; margin: 0.5em;\">\n          </button>\n          <button id=\"openWaze\" class=\"swal2-confirm swal2-styled btn\" style=\"display: inline-block; margin: 0.5em;\">\n          </button>\n        </div>\n      `,\n      showCancelButton: true,\n      cancelButtonText: 'Annuler',\n      cancelButtonColor: '#cc1c35',\n      showConfirmButton: false, \n      preConfirm: () => {}, \n      didOpen: () => {\n        // ouvrir Google Maps\n        document.getElementById('openGoogleMaps').addEventListener('click', () => {\n          const googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${marqueur.coordinates[0]},${marqueur.coordinates[1]}`;\n          window.open(googleMapsUrl, '_blank');\n          Swal.close();\n        });\n        // ouvrir Waze\n        document.getElementById('openWaze').addEventListener('click', () => {\n          const wazeUrl = `https://waze.com/ul?ll=${marqueur.coordinates[0]}%2C${marqueur.coordinates[1]}&navigate=yes`;\n          window.open(wazeUrl, '_blank');\n          Swal.close();\n        });\n      }\n    });\n    },\n    toggleTheme() {\n    this.isDarkMode = !this.isDarkMode; // Bascule sur le thème sombre\n    document.body.classList.toggle('dark-mode');\n    this.currentStyle = this.isDarkMode ? 'jawg-streets' : 'jawg-dark';\n    },\n    applySystemTheme() {\n      const isSystemDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.isDarkMode = isSystemDark;\n      this.toggleTheme(); // Appliquer le thème\n    },\n    initMagicMouse() {\n      const options = {\n      \"outerStyle\": \"circle\",\n      \"hoverEffect\": \"circle-move\",\n      \"hoverItemMove\": false,\n      \"defaultCursor\": false,\n      \"outerWidth\": 30,\n      \"outerHeight\": 30\n    }\n    magicMouse(options);\n    },\n    rechercherMarqueur() {\n    const searchTerm = document.getElementById('search-box').value.toLowerCase();\n    const foundMarker = this.Marqueurs.find(marker => marker.name.toLowerCase().includes(searchTerm));\n    \n    if (foundMarker) {\n      this.centerOnMarker(foundMarker.coordinates[0], foundMarker.coordinates[1]);\n    } else {\n      alert('Marqueur non trouvé.');\n    }\n    },\n    mettreAJourSuggestions() {\n    const searchTerm = this.searchTerm.toLowerCase();\n    this.suggestions = this.Marqueurs.filter(marker => marker.name.toLowerCase().includes(searchTerm))\n      .map(marker => marker.name)\n      .slice(0, 3); // Limite à 3 suggestions\n    \n    this.ouvertSuggestions = this.suggestions.length > 0;\n    },\n    selectionnerSuggestion(suggestion) {\n      this.searchTerm = suggestion; // Maj du champ de recherche avec la suggestion sélectionnée\n      this.suggestions = []; \n      this.ouvertSuggestions = false;\n      const foundMarker = this.Marqueurs.find(marker => marker.name === suggestion);\n      if (foundMarker) {\n        this.centerOnMarker(foundMarker.coordinates[0], foundMarker.coordinates[1]);\n      }\n    },\n    gererClicDocument(e) {\n      if (this.ouvertSuggestions && !this.$refs.searchBox.contains(e.target) && !this.$refs.suggestionsContainer.contains(e.target)) {\n        this.suggestions = [];\n        this.ouvertSuggestions = false;\n      }\n    },\n    addSpin(event) {\n      if (event.target.classList.contains('btn')) {\n        event.target.querySelectorAll('i').forEach((icon) => {\n          icon.classList.add('fa-spin');\n        });\n      }\n    },\n    removeSpin(event) {\n    if (event.target.classList.contains('btn')) {\n      event.target.querySelectorAll('i').forEach((icon) => {\n        icon.classList.remove('fa-spin');\n      });\n    }\n    },\n    async Import_donnes() {\n  try {\n    console.log('Début de l\\'importation des données...');\n    await Promise.all([\n      axios.get('http://localhost:3000/jardins'),\n      axios.get('http://localhost:3000/monuments')\n    ]);\n    console.log('Import des données OK');\n    \n    const marqueurs_données = await axios.get('http://localhost:3000/marqueurs');\n    console.log('Récupération des données des marqueurs OK', marqueurs_données.data);\n\n    this.Marqueurs = marqueurs_données.data.map((marqueur) => {\n      let type = marqueur.type;\n      return {\n        coordinates: [marqueur.latitude, marqueur.longitude],\n        name: marqueur.nom,\n        type: type,\n        code_postal: marqueur.code_postal || marqueur.cp,\n        commune: marqueur.commune,\n        adresse_complete: marqueur.adresse_complete,\n      };\n    });\n    this.reloadWithSplash();\n    console.log('Transformation des données des marqueurs OK', this.Marqueurs);\n  } catch (error) {\n    console.error(\"Erreur lors de l'importation des données:\", error);\n  }\n  \n    },\n    async Import_data() {\n          try {\n        console.log('Début de l\\'importation des données des marqueurs...');\n        const marqueurs_données = await axios.get('http://localhost:3000/marqueurs');\n        console.log('Récupération des données des marqueurs OK', marqueurs_données.data);\n\n        this.Marqueurs = marqueurs_données.data.map((marqueur) => {\n          return {\n            coordinates: [marqueur.latitude, marqueur.longitude],\n            name: marqueur.nom,\n            type: marqueur.type,\n            code_postal: marqueur.code_postal || marqueur.cp, // Utilisez 'marqueur.cp' si 'marqueur.code_postal' n'est pas disponible\n            commune: marqueur.commune,\n            adresse_complete: marqueur.adresse_complete,\n          };\n        });\n\n        console.log('Transformation et importation des données des marqueurs OK');\n      } catch (error) {\n        console.error(\"Erreur lors de l'importation des données des marqueurs:\", error);\n      }\n    },    \n    Modif_Marqueur(index) {\n    const currentMarker = this.Marqueurs[index];\n    const originalName = currentMarker.name;\n\n    Swal.fire({\n      html: `\n        <h2 class=\"txt-primary\">Modifier un marqueur</h2>\n        <input id=\"nom\" class=\"swal2-input\" value=\"${currentMarker.name}\" placeholder=\"Nom\">\n        <input id=\"code_postal\" class=\"swal2-input\" value=\"${currentMarker.code_postal}\" placeholder=\"Code Postal\">\n        <input id=\"commune\" class=\"swal2-input\" value=\"${currentMarker.commune}\" placeholder=\"Commune\">\n      <div class=\"mt-3\">\n            <h5 class=\"txt-primary\">Choix du type</h5>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"jardins\" ${currentMarker.type === 'jardins' ? 'checked' : ''}>\n              <img src=\"${jardinBadge}\" alt=\"Jardin\" style=\"width: 50px;\">\n            </label>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"SitesEtMonuments\" ${currentMarker.type === 'SitesEtMonuments' ? 'checked' : ''}>\n              <img src=\"${monumentBadge}\" alt=\"Monument\" style=\"width: 50px;\">\n            </label>\n      </div>\n      `\n      ,\n      preConfirm: () => {\n        return {\n          name : document.getElementById('nom').value,\n          code_postal: document.getElementById('code_postal').value,\n          commune: document.getElementById('commune').value,\n          type: document.querySelector('input[name=\"type\"]:checked').value,\n        };\n      },\n      confirmButtonText: 'Valider les modifications',\n      focusConfirm: false,\n    }).then((result) => {\n      // Après avoir cliquer sur le bouton de modal\n      if (result.isConfirmed) {\n        // Mise à jour du marqueur dans l'interface utilisateur\n        const updatedMarker = {\n          ...currentMarker,\n          name: result.value.name,\n          code_postal: result.value.code_postal,\n          commune: result.value.commune,\n          type: result.value.type,\n        };\n\n        this.Marqueurs[index] = updatedMarker; \n        this.Marqueur_Select = updatedMarker; \n        this.Marqueur_Update(originalName);\n      }\n    });\n    },\n    Marqueur_Update(originalName) {\n      const { name, code_postal, commune, type } = this.Marqueur_Select;\n      axios.put(`http://localhost:3000/marqueurs/${originalName}`, {\n        new_nom: name,\n        new_code_postal: code_postal ,\n        new_commune: commune,\n        type: type,\n      })\n      .then(() => {\n        console.log('Mise à jour Marqueur OK');\n        this.Marqueur_Select = null; // Réinitialiser après la mise à jour\n      })\n      .catch(error => {\n        console.error('Mise à jour Marqueur KO :', error);\n      });\n    },\n    Annuler() {\n      if (this.AjoutMarquer && this.dernierMarqueur !== null) {\n        this.Marqueurs.splice(this.dernierMarqueur, 1);\n        this.dernierMarqueur = null;\n      }\n      this.Marqueur_Select = null;\n      this.AjoutMarquer = false; \n    },\n    Supprimer_Marqueur(index) {\n      const currentMarker = this.Marqueurs[index];\n      Swal.fire({\n        title: 'Êtes-vous sûr de vouloir supprimer ce marqueur ?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#5457f6',\n        cancelButtonColor: '#cc1c35',\n        confirmButtonText: 'Oui, supprimer !'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.Marqueurs.splice(index, 1);\n          axios.delete(`http://localhost:3000/marqueurs/${currentMarker.name}`)\n            .then(() => {\n              console.log('Suppression Marqueur OK');\n              this.calculateStats();\n              //this.resetMap();\n              location.reload();\n            })\n            .catch(error => {\n              console.error('Suppression Marqueur KO :', error);\n            });\n        }\n      });\n    },\n    Ajouter_Marqueur(event) {\n  console.log(\"Début de la fonction Ajouter_Marqueur\");\n  const latitude = event.latlng.lat;\n  const longitude = event.latlng.lng;\n  console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);\n\n  // Appel de l'API pour obtenir la liste des communes \n  axios.get('https://geo.api.gouv.fr/communes')\n    .then(response => {\n      const communes = response.data.map(commune => ({\n        nom: commune.nom,\n        code_postal: commune.codesPostaux[0] \n      }));\n      console.log(`Nombre de communes récupérées : ${communes.length}`);\n\n      // La liste des options pour l'autocomplétion\n      const options = communes.map(commune => `${commune.nom} (${commune.code_postal})`);\n      console.log(`Options pour l'autocomplétion construites : ${options.length} options`);\n\n      // Affichage du formulaire Swal\n      Swal.fire({\n        html: `\n          <h1 class=\"txt-primary\">Ajouter un centre d'intérêt <i class=\"fa-solid txt-dark fa-map-pin txt-danger\"></i></h1>\n          <input id=\"nom\" class=\"swal2-input\" placeholder=\"Nom\">\n          <input id=\"commune\" class=\"swal2-input\" placeholder=\"Commune\" list=\"communes\">\n          <div class=\"mt-3\">\n            <h5 class=\"txt-primary\">Choix du type</h5>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"jardins\" checked required>\n              <img src=\"${jardinBadge}\" alt=\"Jardin\" style=\"width: 50px;\">\n            </label>\n            <label>\n              <input type=\"radio\" name=\"type\" value=\"SitesEtMonuments\">\n              <img src=\"${monumentBadge}\" alt=\"Monument\" style=\"width: 50px;\">\n            </label>\n          </div>\n        `,\n        focusConfirm: false,\n        preConfirm: () => {\n          console.log(\"Validation du formulaire Swal\");\n          const nom = document.getElementById('nom').value;\n          const commune_input = document.getElementById('commune').value;\n          const type = document.querySelector('input[name=\"type\"]:checked').value;\n\n          if (!nom || !commune_input) {\n            console.log(\"Échec de la validation : champs manquants\");\n            Swal.showValidationMessage(\"Veuillez remplir tous les champs.\");\n            return false;\n          }\n          console.log(`Formulaire validé avec : nom=${nom}, commune=${commune_input}, type=${type}`);\n          const match = commune_input.match(/(.*) \\((\\d+)\\)/);\n          const commune = match ? match[1] : commune_input;\n          const code_postal_autocomplete = match ? match[2] : '';\n\n          return { nom, type, code_postal: code_postal_autocomplete, commune };\n        },\n        didOpen: () => {\n          console.log(\"Ouverture du Swal pour ajout de marqueur\");\n          const datalist = document.createElement('datalist');\n          datalist.id = 'communes';\n          options.forEach(option => {\n            const optionElement = document.createElement('option');\n            optionElement.value = option;\n            datalist.appendChild(optionElement);\n          });\n          document.getElementById('commune').appendChild(datalist);\n        }\n      }).then((result) => {\n        if (result.isConfirmed) {\n          console.log(\"Marqueur confirmé pour ajout\");\n          const Nouveau_Marqueur = {\n            coordinates: [latitude, longitude],\n            name: result.value.nom,\n            type: result.value.type, \n            code_postal: result.value.code_postal || '',\n            commune: result.value.commune || '',\n            adresse_complete: '',\n          };\n          console.log(`Nouveau marqueur : ${JSON.stringify(Nouveau_Marqueur)}`);\n          this.Marqueur_Select = Nouveau_Marqueur; \n          this.Enregistrer_Marqueur();\n          this.Import_donnes();\n          location.reload();\n        }\n        else{\n          console.log(\"Ajout de marqueur annulé ou non confirmé\");\n        }\n      });\n    })\n    .catch(error => {\n      console.error('Erreur lors de la récupération des communes:', error);\n    });\n    console.log(\"Fin de la fonction Ajouter_Marqueur\");\n    },\n    Enregistrer_Marqueur() {\n      if (!this.Marqueur_Select.type) {\n        console.error(\"Le type de marqueur est indéfini\");\n        return;\n      }\n      console.log(\"Type de marqueur :\", this.Marqueur_Select.type);\n      axios\n        .post(`http://localhost:3000/marqueurs`, {\n          type: this.Marqueur_Select.type,\n          nom: this.Marqueur_Select.name,\n          latitude: this.Marqueur_Select.coordinates[0],\n          longitude: this.Marqueur_Select.coordinates[1],\n          code_postal: this.Marqueur_Select.code_postal,\n          commune: this.Marqueur_Select.commune,\n          adresse_complete: this.Marqueur_Select.adresse_complete,\n        })\n        .then(() => {\n          console.log('Ajout Marqueur OK');          \n        })\n        .catch(error => {\n          console.error(\"Ajout Marqueur KO:\", error);\n        });\n    },\n    centerOnMarker(lat, lng, index) {\n      this.center = [lat, lng];\n      this.zoom = 20;\n      this.selectedMarkerIndex = index; // Mise à jour de l'index du marqueur sélectionné\n      if (this.$refs.map && this.$refs.map.mapObject) {\n        const map = this.$refs.map.mapObject;\n        map.eachLayer((layer) => {\n          if (layer instanceof L.Marker && layer.options.index === index) {\n            map.setView([lat, lng], this.zoom);\n            layer.openPopup();\n          }\n        });\n      }\n    },\n    reloadWithSplash() {\n      this.showSplash = true;\n      setTimeout(() => {\n        window.location.reload(); \n      }, 100);\n    },\n    // Fonction pour revenir au Zoom de base\n    resetMap() {\n      this.zoom = 10.4; \n      this.center = [16.265, -61.550];\n    },\n    getIcon(type) {\n      console.log(`Recherche de l'icône pour le type: ${type}`); \n      if (type === 'jardins') {\n        console.log('Retour de l\\'icône pour les jardins'); \n        return jardinIcon;\n      } else if (type === 'SitesEtMonuments') {\n        console.log('Retour de l\\'icône pour les Sites et Monuments');\n        return monumentIcon;\n      } else {\n        console.log('Type non reconnu, retour d\\'une icône par défaut'); \n        return L.icon({\n          iconUrl: '../assets/img/default.png', \n          iconSize: [largeurIcone, hauteurIcone],\n        });\n      }\n    },\n    getBadgeUrl(type) {\n    if (type === 'jardins') {\n      return require('../assets/img/jardin-badge.png');\n    } else if (type === 'SitesEtMonuments') {\n      return require('../assets/img/monument-badge.png');\n    } else {\n      return require('../assets/img/default-badge.png');\n    }\n    },\n    async fetchMarqueurs() {\n      try {\n        const response = await axios.get('http://localhost:3000/marqueurs');\n        this.marqueurs = response.data;\n        this.calculateStats();\n      } catch (error) {\n        console.error('Erreur lors de la récupération des marqueurs:', error);\n      }\n    },\n    //functions de calcul des stats de la base\n    calculateStats() {\n      this.nombreJardins = this.marqueurs.filter(m => m.type === 'jardins').length;\n      this.nombreMonuments = this.marqueurs.filter(m => m.type === 'SitesEtMonuments').length;\n    },\n  },\n};\n\n</script>\n<style>\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}